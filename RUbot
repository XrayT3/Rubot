#!/usr/bin/python3.4
# -*- coding: utf-8 -*-
import telebot
import datetime
import time
import RUconst
from telebot import types

bot = telebot.TeleBot(const.TOKEN)

now_time = datetime.datetime.now()
day = 'day'
raspisanie = 'raspisanie'
raspisanie2 = 'raspisanie2'
tm = 'tm'
month = 'month'
hour = 'hour'
minute = 'minute'


#–ë–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.
def data_and_vremy():
    now_time = datetime.datetime.now()
    cur_hour = now_time.hour  # –ß–∞—Å —Ç–µ–∫—É—â–∏–π
    cur_minute = now_time.minute
    month1 = {1: u"–Ø–Ω–≤–∞—Ä—è", 2: u"–§–µ–≤—Ä–∞–ª—è", 3: u"–ú–∞—Ä—Ç–∞", 4: u"–ê–ø—Ä–µ–ª—è", 5: u"–ú–∞—è", 6: u"–ò—é–Ω—è", 7: u"–ò—é–ª—è", 8: u'–ê–≤–≥—É—Å—Ç–∞',
              9: u'–°–µ–Ω—Ç—è–±—Ä—è', 10: u'–û–∫—Ç—è–±—Ä—è', 11: u'–ù–æ—è–±—Ä—è', 12: u'–î–µ–∫–∞–±—Ä—å'}
    today = datetime.date.today()
    month1 = str((month1[today.month]))
    day1 = str(today.day)
    days = {0: u"–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 1: u"–≤—Ç–æ—Ä–Ω–∏–∫", 2: u"—Å—Ä–µ–¥–∞", 3: u"—á–µ—Ç–≤–µ—Ä–≥", 4: u"–ø—è—Ç–Ω–∏—Ü–∞", 5: u"—Å—É–±–±–æ—Ç–∞",
            6: u"–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"}
    tm1 = (days[datetime.date.today().weekday()])
    if tm1 == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        raspisanie1 = const.Pn
        raspisanie3 = const.Vt
    if tm1 == '–≤—Ç–æ—Ä–Ω–∏–∫':
        raspisanie1 = const.Vt
        raspisanie3 = const.Sr
    if tm1 == '—Å—Ä–µ–¥–∞':
        raspisanie1 = const.Sr
        raspisanie3 = const.Che
    if tm1 == '—á–µ—Ç–≤–µ—Ä–≥':
        raspisanie1 = const.Che
        raspisanie3 = const.Pt
    if tm1 == '–ø—è—Ç–Ω–∏—Ü–∞':
        raspisanie1 = const.Pt
        raspisanie3 = const.Su
    if tm1 == '—Å—É–±–±–æ—Ç–∞':
        raspisanie1 = const.Su
        raspisanie3 = const.Vsk
    if tm1 == '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        raspisanie1 = const.Vsk
        raspisanie3 = const.Pn
    global day, month, tm, raspisanie, raspisanie2, hour, minute
    day = day1
    month = month1
    tm = tm1
    raspisanie = raspisanie1
    raspisanie2 = raspisanie3
    hour = str(cur_hour)
    minute = str(cur_minute)
    return day1, month1, tm1, raspisanie1


#///////////////////////////////////////////////////////////////////

@bot.message_handler(commands=['start'])
def start(message):
    sent = bot.send_message(message.chat.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    bot.register_next_step_handler(sent, hello)


def hello(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {name}. –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.'.format(name=message.text))
    time.sleep(1)
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üîî–ó–≤–æ–Ω–∫–∏', 'üìö–£—Ä–æ–∫–∏')
    keyboard.row('üìù–ó–∞–ø–∏—Å–∞—Ç—å –î–ó')
    # keyboard.add(*[telebot.types.KeyboardButton(name) for name in ['–û–ª–∏–º–ø–∏–∞–¥—ã', '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è']])
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?', reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def zvonki(message) :
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–í—Ç–æ—Ä–∞—è —Å–º–µ–Ω–∞']])
    keyboard1 = types.InlineKeyboardMarkup()
    keyboard1.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–ù–∞ –∑–∞–≤—Ç—Ä–∞']])
    keyboard2 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard2.row('–ß—Ç–æ –∑–∞–¥–∞–ª–∏?', '–ü–æ–º–æ—á—å(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')
    keyboard2.row('–ì–î–ó(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)','–ù–∞–∑–∞–¥')
    if message.text == 'üîî–ó–≤–æ–Ω–∫–∏':
         bot.send_message(message.chat.id, '<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –ø–µ—Ä–≤–æ–π —Å–º–µ–Ω—ã</b>\n\n'
                                              '1. 08:00 - 08:40\n'
                                              '2. 08:50 - 09:30\n'
                                              '3. 09:45 - 10:25\n'
                                              '4. 10:40 - 11:20\n'
                                              '5. 11:35 - 12:15\n'
                                              '6. 12:25 - 13:05\n', parse_mode='HTML', reply_markup=keyboard)

    if message.text == '–ù–∞–∑–∞–¥':
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.row('üîî–ó–≤–æ–Ω–∫–∏', 'üìö–£—Ä–æ–∫–∏')
            keyboard.row('üìù–ó–∞–ø–∏—Å–∞—Ç—å –î–ó')
            # keyboard.add(*[telebot.types.KeyboardButton(name) for name in ['–û–ª–∏–º–ø–∏–∞–¥—ã', '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è']])
            bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?', parse_mode='HTML', reply_markup=keyboard)

    if message.text == 'üìö–£—Ä–æ–∫–∏':
        data_and_vremy()
        bot.send_message(message.chat.id,
                             '<b>' + day + ' ' + month + ' ,' + tm + '</b>\n\n' +
                             raspisanie, parse_mode='HTML', reply_markup= keyboard1)
        bot.send_message(message.chat.id, '...', reply_markup= keyboard2)


@bot.callback_query_handler(func=lambda c: True)
def inline(c):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–ü–µ—Ä–≤–∞—è —Å–º–µ–Ω–∞']])
    keyboard1 = types.InlineKeyboardMarkup()
    keyboard1.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–í—Ç–æ—Ä–∞—è —Å–º–µ–Ω–∞']])
    keyboard2 = types.InlineKeyboardMarkup()
    keyboard2.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–ù–∞ —Å–µ–≥–æ–¥–Ω—è']])
    keyboard3 = types.InlineKeyboardMarkup()
    keyboard3.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–ù–∞ –∑–∞–≤—Ç—Ä–∞']])
    if c.data == '–ü–µ—Ä–≤–∞—è —Å–º–µ–Ω–∞':
        bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id,
                                  text='<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –ø–µ—Ä–≤–æ–π —Å–º–µ–Ω—ã</b>\n\n'
                                       '1. 08:00 - 08:40\n'
                                       '2. 08:50 - 09:30\n'
                                       '3. 09:45 - 10:25\n'
                                       '4. 10:40 - 11:20\n'
                                       '5. 11:35 - 12:15\n'
                                       '6. 12:25 - 13:05\n',
                                  parse_mode='HTML', reply_markup=keyboard1)

    if c.data == '–í—Ç–æ—Ä–∞—è —Å–º–µ–Ω–∞':
        bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id,
                                  text='<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ –≤—Ç–æ—Ä–æ–π —Å–º–µ–Ω—ã</b>\n\n'
                                       '1. 14:00 - 14:40\n'
                                       '2. 14:50 - 15:30\n'
                                       '3. 15:45 - 16:25\n'
                                       '4. 16:35 - 17:15\n'
                                       '5. 17:25 - 18:05\n'
                                       '6. 18:10 - 18:50\n',
                                  parse_mode='HTML', reply_markup=keyboard)

    if c.data == '–ù–∞ –∑–∞–≤—Ç—Ä–∞':
        bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id,
                                  text='<b>' + day + ' ' + month + ' ,' + tm + '</b>\n\n' +
                                  raspisanie2, parse_mode='HTML', reply_markup= keyboard2)

    if c.data == '–ù–∞ —Å–µ–≥–æ–¥–Ω—è':
        bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id,
                                  text='<b>' + day + ' ' + month + ' ,' + tm + '</b>\n\n' +
                                  raspisanie, parse_mode='HTML', reply_markup= keyboard3)



bot.polling()
